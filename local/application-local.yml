# 加解密根密码
jasypt:
  encryptor:
    password: pig #根密码

# ===================================================================
# 日志配置
# ===================================================================      
logging: 
  config: classpath:cust-logback.xml
  path: D:\\logs

# Spring 相关
spring:
  redis:
    password: kdniao2017
    host: 192.168.1.26
    port: 6389
    timeout: 10000 # 连接超时时间（毫秒）
    database: 0 # Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
    lettuce:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）默认 8
        max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）默认 -1
        max-idle: 8 # 连接池中的最大空闲连接默认 8
        min-idle: 0 # 连接池中的最小空闲连接默认 0
# （普通集群，不使用则不用开启）在群集中执行命令时要遵循的最大重定向数目。
#spring.redis.cluster.max-redirects=
# （普通集群，不使用则不用开启）以逗号分隔的“主机：端口”对列表进行引导。
#spring.redis.cluster.nodes=127.0.0.1:1001,127.0.0.1:1002        
  # zipkin
  zipkin:
    enabled: true
    base-url: http://192.168.1.74:5002
  sleuth:
    web:
      client:
        enabled: true
    sampler:
      # 默认的采样比率为0.1，不能看到所有请求数据
      # 更改采样比率为1，就能看到所有的请求数据了，但是这样会增加接口调用延迟
      probability: 1.0

# 暴露监控端点
management:
  endpoints:
    web:
      exposure:
        include: '*'

# feign 配置
feign:
  hystrix:
    enabled: true
  okhttp:
    enabled: true
  httpclient:
    enabled: false
  client:
    config:
      default:
        connectTimeout: 10000
        readTimeout: 10000
  compression:
    request:
      enabled: true
    response:
      enabled: true

# hystrix 配置
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 60000
  shareSecurityContext: true

#请求处理的超时时间
ribbon:
  ReadTimeout: 10000
  ConnectTimeout: 10000

# mybaits-plus配置
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.kj.ordercenter
  global-config:
    banner: false
    db-config:
      id-type: 0
      field-strategy: 1
      table-underline: true
      logic-delete-value: 1
      logic-not-delete-value: 0
  configuration:
    map-underscore-to-camel-case: true

# spring security 配置
security:
  oauth2:
    resource:
      loadBalanced: true
      token-info-uri: http://pig-auth/oauth/check_token
